
option
art
on

init

log
/usr/progress/art/specs/test/natlist1/natlist1.impl_1/natlist1.impl_1.prop_1/natlist1.impl_1.prop_1

option
history
no-history



ADD
[0 : NAT]
[succ : NAT -> NAT]
[null : NATLIST]
[cons : NAT, NATLIST -> NATLIST]
[append : NATLIST, NATLIST -> NATLIST]
[delete : NAT, NATLIST -> NATLIST]
[member : NAT, NATLIST -> bool]
[perm : NATLIST, NATLIST -> bool]
append(null, xnl1) := xnl1
append(cons(x, xnl1), xnl2) := cons(x, append(xnl1, xnl2))
delete(x, null) := null
delete(x, cons(x, xnl1)) := xnl1
delete(x, cons(y, xnl1)) := cons(y, delete(x, xnl1)) if not ((y = x))
member(x, null) := false
member(x, cons(x, xnl1)) := true
member(x, cons(y, xnl1)) := member(x, xnl1) if not ((x = y))
perm(null, null) := true
perm(null, cons(x, xnl1)) := false
perm(cons(x, xnl1), null) := false
perm(cons(x, xnl1), xnl2) := (member(x, xnl2) and perm(xnl1, delete(x, xnl2)))
]



operator
constructor
0
 

operator
constructor
succ
yes

operator
constructor
null
 

operator
constructor
cons
yes

option
order
l

operator
precedence
perm member 

operator
precedence
perm delete 

operator
status
perm
lr



makerule

suffice

option
prove
e

cover

add
delete(x, xnl1) == xnl1 if not(member(x, xnl1))
]

makerule



write
spec-write
/usr/progress/art/specs/test/natlist1/natlist1.impl_1/natlist1.impl_1.prop_1/natlist1.impl_1.prop_1

unlog

option
art
off
